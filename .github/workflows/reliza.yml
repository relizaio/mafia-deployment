on: [push]

name: Obtain version from Reliza and register new update there

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    env:
      RELIZA_API_ID: ${{ secrets.RELIZA_API_ID }}
      RELIZA_API_KEY: ${{ secrets.RELIZA_API_KEY }}
      RELIZA_HUB_URI: ${{ secrets.RELIZA_HUB_URI }}
      HELM_PROJECT_API_ID: ${{ secrets.HELM_PROJECT_API_ID }}
      HELM_PROJECT_API_KEY: ${{ secrets.HELM_PROJECT_API_KEY }}
      CHART_REPO_URL: ${{ secrets.CHART_REPO_URL }}
      CHART_REPO_USERNAME: ${{ secrets.REGISTRY_LOGIN }}
      CHART_REPO_PASSWORD: ${{ secrets.REGISTRY_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Helm script
        run: |
          echo -n sha256: > digest_file
          dir=helm; find "$dir" -type f -exec sha256sum {} \; | sed "s~$dir~~g" | sort -d | sha256sum | cut -d ' ' -f 1 >> digest_file
          echo Initial Digest:
          cat digest_file
          # call reliza and see if this file system artifact was already registered before
          docker run --rm relizaio/reliza-cli checkhash \
          -u $RELIZA_HUB_URI \
          -i $HELM_PROJECT_API_ID \
          -k $HELM_PROJECT_API_KEY \
          --hash $(cat digest_file) > reliza_helm_check 2>&1

          echo "Response from Reliza:"
          reliza_helm_check=$(cat reliza_helm_check)
          echo $reliza_helm_check
          rm digest_file
          rm reliza_helm_check
          # little sleep is needed to make sure we calculate if condition correctly
          sleep 5

          # now only create new release if no release was found with same hash
          if [ "$reliza_helm_check" == "{}" ]
          then
            
            # obtain version
            RLZ_VER_JSON=$(docker run --rm relizaio/reliza-cli getversion -u $RELIZA_HUB_URI -i $HELM_PROJECT_API_ID -k $HELM_PROJECT_API_KEY -b $GITHUB_REF)
            echo "reliza version json found: $RLZ_VER_JSON"
            RLZ_FULL_VER=$(echo $RLZ_VER_JSON | docker run -i --rm relizaio/jq -r ".version")
            echo "RLZ_FULL_VER = $RLZ_FULL_VER"

            # now inject new version into the chart and commit and push
            sed -i "/version: /s/.*/version: $RLZ_FULL_VER/" $GITHUB_WORKSPACE/helm/Chart.yaml

            echo "committing"
            git config --global user.name 'reliza-auto'
            git config --global user.email 'info@reliza.io'
            git add .
            git commit -m "fix: auto version increment for Mafia helm chart based on Reliza Hub details"
            git push

            # Push The Chart now
            docker pull registry.test.relizahub.com/library/helm:latest
            docker run --rm -v $GITHUB_WORKSPACE/helm:/apps/mafia registry.test.relizahub.com/library/helm push mafia $CHART_REPO_URL -u $CHART_REPO_USERNAME -p $CHART_REPO_PASSWORD
            
            # since we just incremented version we need to recompute digest

            echo -n sha256: > digest_file
            dir=helm; find "$dir" -type f -exec sha256sum {} \; | sed "s~$dir~~g" | sort -d | sha256sum | cut -d ' ' -f 1 >> digest_file
            echo New Digest: 
            cat digest_file

            # Construct Reliza command to stream version to reliza
            echo -n " -u $RELIZA_HUB_URI -i $HELM_PROJECT_API_ID -k $HELM_PROJECT_API_KEY " >> reliza_command
            echo -n "--artid mafia-helm-chart-$RLZ_FULL_VER " >> reliza_command
            echo -n "--artbuildid github$GITHUB_ACTION$commit_sha " >> reliza_command
            echo -n "--artcimeta GitHub Actions " >> reliza_command
            echo -n "--arttype file " >> reliza_command
            echo -n "--artdigests $(cat digest_file) " >> reliza_command
            echo -n "--datestart $BUILD_START " >> reliza_command
            echo -n "--dateend $(date -Iseconds) " >> reliza_command
            echo -n "-b $GITHUB_REF --vcstype git --commit $commit_sha --vcsuri github.com/$GITHUB_REPOSITORY --date $(git log -1 --date=iso-strict --pretty='%ad') -v $RLZ_FULL_VER" >> reliza_command
            cat reliza_command
            # send version to reliza
            echo "sending version to reliza"
            docker run --rm relizaio/reliza-cli addrelease $(cat reliza_command)
            exit_status=$(echo $?)
            if [ $exit_status -ne 0 ];then echo "error on submitting metadata to Reliza Hub, failing build"; fi
            if [ $exit_status -ne 0 ];then exit 1; fi
          else
            echo "Artifact is already part of another release, not duplicating reliza hub chart release"
          fi
      - name: Generate version and stream version to Reliza Hub
        run: |
          # get version
          docker pull relizaio/reliza-cli
          echo -u $RELIZA_HUB_URI  -k $RELIZA_API_KEY -i $RELIZA_API_ID -b $GITHUB_REF --metadata GitHub
          docker run --rm relizaio/reliza-cli getversion -u $RELIZA_HUB_URI -k $RELIZA_API_KEY -i $RELIZA_API_ID -b $GITHUB_REF --metadata GitHub > full_version_output 2>&1
          # show reliza command output in case there is error
          cat full_version_output
          cat full_version_output | jq -r ".version" > version
          vvar=$(cat version)
          # Construct Reliza command to stream version to reliza
          echo -n "--artid github.com/$GITHUB_REPOSITORY " >> reliza_command
          echo -n "--artbuildid github$GITHUB_ACTION$GITHUB_SHA " >> reliza_command
          echo -n "--artbuilduri https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID " >> reliza_command
          echo -n "--artcimeta GitHub Actions " >> reliza_command
          echo -n "--arttype file " >> reliza_command
          echo -n "--artdigests sha1:$GITHUB_SHA " >> reliza_command
          echo -n "-b $GITHUB_REF --vcstype git --commit $GITHUB_SHA  -u ${{ secrets.RELIZA_HUB_URI }} -k ${{ secrets.RELIZA_API_KEY }} -i ${{ secrets.RELIZA_API_ID }} --vcsuri github.com/$GITHUB_REPOSITORY \
              -v $vvar" >> reliza_command
          cat reliza_command
          # send version to reliza
          docker run --rm relizaio/reliza-cli addrelease $(cat reliza_command)