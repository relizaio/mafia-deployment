.helm-script: &helm-script |
  echo -n sha256: > digest_file
  dir=helm; find "$dir" -type f -exec sha256sum {} \; | sed "s~$dir~~g" | sort -d | sha256sum | cut -d ' ' -f 1 >> digest_file
  echo Initial Digest:
  cat digest_file
  # call reliza and see if this file system artifact was already registered before
  docker run --rm relizaio/reliza-cli checkhash \
  -u $RELIZA_HUB_URI \
  -i $HELM_PROJECT_API_ID \
  -k $HELM_PROJECT_API_KEY \
  --hash $(cat digest_file) > reliza_helm_check 2>&1

  echo "Response from Reliza:"
  reliza_helm_check=$(cat reliza_helm_check)
  echo $reliza_helm_check
  # little sleep is needed to make sure we calculate if condition correctly
  sleep 5

  # now only create new release if no release was found with same hash
  if [ "$reliza_helm_check" == "{}" ]
  then
    
    # obtain version
    RLZ_VER_JSON=$(docker run --rm relizaio/reliza-cli getversion -u $RELIZA_HUB_URI -i $HELM_PROJECT_API_ID -k $HELM_PROJECT_API_KEY -b $CI_COMMIT_REF_NAME --metadata GitLab)
    echo "reliza version json found: $RLZ_VER_JSON"
    RLZ_FULL_VER=$(echo $RLZ_VER_JSON | docker run -i --rm relizaio/jq -r ".version")
    echo "RLZ_FULL_VER = $RLZ_FULL_VER"

    # now inject new version into the chart and commit and push
    sed -i "/version: /s/.*/version: $RLZ_FULL_VER/" $CI_PROJECT_DIR/helm/Chart.yaml

    echo "committing"
    git config --global user.name "$AUTO_COMMITTER_NAME"
    git config --global user.email "$AUTO_COMMITTER_EMAIL"
    git add .
    git commit -m "fix: auto version increment for Mafia helm chart based on Reliza Hub details"
    git push -o ci.skip "https://${GITLAB_USER_NAME}:${GIT_PUSH_TOKEN}@${CI_REPOSITORY_URL#*@}"

    # Push The Chart now
    docker pull trailb/helm:latest
    docker run --rm -v $CI_PROJECT_DIR/helm:/apps/mafia trailb/helm push mafia $CHART_REPO_URL -u $CHART_REPO_USERNAME -p $CHART_REPO_PASSWORD
    
    # since we just incremented version we need to recompute digest

    echo -n sha256: > digest_file
    dir=helm; find "$dir" -type f -exec sha256sum {} \; | sed "s~$dir~~g" | sort -d | sha256sum | cut -d ' ' -f 1 >> digest_file
    echo New Digest: 
    cat digest_file

    # Construct Reliza command to stream version to reliza
    echo -n "--artid mafia-helm-chart-$RLZ_FULL_VER " >> reliza_command
    echo -n "--artbuildid gitlabCI_$CI_JOB_ID " >> reliza_command
    echo -n "--artcimeta GitLab CI build " >> reliza_command
    echo -n "--arttype file " >> reliza_command
    echo -n "--artdigests $(cat digest_file) " >> reliza_command
    echo -n "--datestart $BUILD_START " >> reliza_command
    echo -n "--dateend $(date -Iseconds) " >> reliza_command
    echo -n "-b $CI_COMMIT_REF_NAME --vcstype git --commit $commit_sha -u $RELIZA_HUB_URI -i $RELIZA_PROJECT_API_ID -k $RELIZA_PROJECT_API_KEY --vcsuri $CI_PROJECT_URL --date $(git log -1 --date=iso-strict --pretty='%ad') -v $RLZ_FULL_VER" >> reliza_command
    cat reliza_command
    # send version to reliza
    echo "sending version to reliza"
    docker run --rm relizaio/reliza-cli addrelease $(cat reliza_command)
    exit_status=$(echo $?)
    if [ $exit_status -ne 0 ];then echo "error on submitting metadata to Reliza Hub, failing build"; fi
    if [ $exit_status -ne 0 ];then exit 1; fi
  else
    echo "Artifact is already part of another release, not duplicating reliza hub chart release"
  fi

.template-script: &template-script |
  # format of $BUILD_ENV_PARAMS: --env PRODUCTION|helm_gitlab_prod|values_gitlab_prod.yaml, --env TEST|helm_gitlab_test|values_gitlab_test.yaml, --env STAGING|helm_gitlab_staging|values_gitlab_staging.yaml
  /bin/bash -c \
  'IFS="," read -ra ENV_BUILDS <<< "$BUILD_ENV_PARAMS"
  for envbuild in "${ENV_BUILDS[@]}"; do
    IFS="|" read -ra SPLIT_BUILD_ENV <<< "$envbuild"
    mkdir -p $CI_PROJECT_DIR/${SPLIT_BUILD_ENV[1]}/values_dir
    chmod 0777 $CI_PROJECT_DIR/${SPLIT_BUILD_ENV[1]}/values_dir
    docker run --rm -v $CI_PROJECT_DIR/$INDIRECTORY/:/indir -v $CI_PROJECT_DIR/${SPLIT_BUILD_ENV[1]}/values_dir:/outdir relizaio/reliza-cli parsetemplate -u $RELIZA_HUB_URI -i $RELIZA_ORGANIZATION_API_ID -k $RELIZA_ORGANIZATION_API_KEY ${SPLIT_BUILD_ENV[0]}
    exit_status=$(echo $?)
    if [ $exit_status -ne 0 ];then echo "error on reliza client template parse, failing build"; fi
    if [ $exit_status -ne 0 ];then exit 1; fi
    helm template -f $CI_PROJECT_DIR/${SPLIT_BUILD_ENV[1]}/values_dir/${SPLIT_BUILD_ENV[2]} $INDIRECTORY > $CI_PROJECT_DIR/${SPLIT_BUILD_ENV[1]}/definitions.yml
    exit_status=$(echo $?)
    if [ $exit_status -ne 0 ];then echo "error on helm template, failing build"; fi
    if [ $exit_status -ne 0 ];then exit 1; fi
    rm -rf $CI_PROJECT_DIR/${SPLIT_BUILD_ENV[1]}/values_dir
  done'
  
.git-script: &git-script |
  cd $CI_PROJECT_DIR
  git status
  lines=$(git status -s | wc -l)
  if [ $lines -gt 0 ];then
    echo "committing"
    git config --global user.name "$AUTO_COMMITTER_NAME"
    git config --global user.email "$AUTO_COMMITTER_EMAIL"
    git add .
    git commit -m "fix: auto-update of deployment based on Reliza Hub details"
    git push -o ci.skip "https://${GITLAB_USER_NAME}:${GIT_PUSH_TOKEN}@${CI_REPOSITORY_URL#*@}"
  else
    echo "no change, nothing to commit"
  fi
  
.submit-to-reliza-script: &submit-to-reliza-script |
  echo "running submit-to-reliza-script"
  cd $CI_PROJECT_DIR
  # check if git commit has been submitted to Reliza Hub earlier, and submit release if not
  commit_sha=$(git log -1 --pretty='%H')
  echo "commit sha found: $commit_sha"
  echo "checking if hash present on relizahub"
  hashcheck=$(docker run --rm relizaio/reliza-cli checkhash -u $RELIZA_HUB_URI -i $RELIZA_PROJECT_API_ID -k $RELIZA_PROJECT_API_KEY --hash $commit_sha)
  echo "hash check value = "
  echo $hashcheck
  # now only create new release if no release was found with same hash
  if [ "$hashcheck" = "{}" ];then
    # Generate version and stream version to Reliza Hub
    # get version
    echo "hash check was empty, generating new version and streaming to relizahub"
    docker pull relizaio/jq
    RLZ_VER_JSON=$(docker run --rm relizaio/reliza-cli getversion -u $RELIZA_HUB_URI -i $RELIZA_PROJECT_API_ID -k $RELIZA_PROJECT_API_KEY -b $CI_COMMIT_REF_NAME --metadata GitLab)
    echo "reliza version json found: $RLZ_VER_JSON"
    RLZ_FULL_VER=$(echo $RLZ_VER_JSON | docker run -i --rm relizaio/jq -r ".version")
    echo "RLZ_FULL_VER = $RLZ_FULL_VER"
    # Construct Reliza command to stream version to reliza
    echo -n "--artid $CI_PROJECT_URL " >> reliza_command
    echo -n "--artbuildid gitlabCI_$CI_JOB_ID " >> reliza_command
    echo -n "--artcimeta GitLab CI commit " >> reliza_command
    echo -n "--arttype file " >> reliza_command
    echo -n "--artdigests sha1:$commit_sha " >> reliza_command
    echo -n "--datestart $BUILD_START " >> reliza_command
    echo -n "--dateend $(date -Iseconds) " >> reliza_command
    echo -n "-b $CI_COMMIT_REF_NAME --vcstype git --commit $commit_sha -u $RELIZA_HUB_URI -i $RELIZA_PROJECT_API_ID -k $RELIZA_PROJECT_API_KEY --vcsuri $CI_PROJECT_URL --date $(git log -1 --date=iso-strict --pretty='%ad') -v $RLZ_FULL_VER" >> reliza_command
    cat reliza_command
    # send version to reliza
    echo "sending version to reliza"
    docker run --rm relizaio/reliza-cli addrelease $(cat reliza_command)
    exit_status=$(echo $?)
    if [ $exit_status -ne 0 ];then echo "error on submitting metadata to Reliza Hub, failing build"; fi
    if [ $exit_status -ne 0 ];then exit 1; fi
  else
    echo "Commit Hash already present on Reliza Hub, not resubmitting release"
  fi

docker-build:
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - BUILD_START=$(date -Iseconds)
    - apk add bash
    - apk add git
    - docker pull relizaio/reliza-cli
    - cd /tmp; wget https://get.helm.sh/helm-v3.2.4-linux-amd64.tar.gz; echo "8eb56cbb7d0da6b73cd8884c6607982d0be8087027b8ded01d6b2759a72e34b1  helm-v3.2.4-linux-amd64.tar.gz" > checksum.txt; sha256sum -c checksum.txt; tar -xzvf helm-v3.2.4-linux-amd64.tar.gz; cp linux-amd64/helm /usr/bin/; cd $CI_PROJECT_DIR
  script:
    - git checkout master
    - *helm-script
    - *template-script
    - *git-script
    - *submit-to-reliza-script
